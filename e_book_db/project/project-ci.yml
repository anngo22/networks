image: python:3.9-slim


workflow:
  rules:
    - when: always


# стейджи пайплайна
stages:
  - tasks

# внутри пайплайна автоматически поднимается
# пустая база Postgres (каждый раз на новый степ)
services:
  - name: postgres:15-alpine
    alias: postgres


variables:
#  переменные окружения для Postgres
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_HOST_AUTH_METHOD: trust

#  переменные окружения для вспомогательного
#  скрипта utils/pypsql.py и тестов
  DBNAME: postgres
  DBHOST: postgres
  DBPORT: 5432
  DBUSER: postgres
  DBPASSWORD: password

#  аккуратное формирование всяких абсолютных
#  путей к файлам и директориям
#  у вас будет ${PROJECT_DIR} тождественно равен ${CI_PROJECT_DIR}
  PROJECT_DIR: ${CI_PROJECT_DIR}/project
  SCRIPTS_DIR: ${PROJECT_DIR}/scripts
  UTILS_DIR: ${PROJECT_DIR}/utils
  PYPSQL: ${UTILS_DIR}/pypsql.py

#  переменные для цвета в консоли (можете
#  использовать какие-то другие свои)
  NO_COLOUR: '\033[0m'
  LIGHT_RED: '\033[1;31m'


.setup:
  before_script:
    - pip install -r ${PROJECT_DIR}/requirements.txt > /dev/null 2> /dev/null


ddl scripts:
  stage: tasks
  extends:
    - .setup
  script:
    - echo -e "${LIGHT_RED}>>> Task 3. DDL queries <<<${NO_COLOUR}"
    - python3 ${PYPSQL} --file="${SCRIPTS_DIR}/create_scripts.sql" --cat
    - python3 ${PYPSQL} --file="${SCRIPTS_DIR}/insert_scripts.sql" --cat
    - python3 ${PYPSQL} --file="${SCRIPTS_DIR}/select.sql" --cat
    - python3 ${PYPSQL} --file="${SCRIPTS_DIR}/view.sql" --cat
    - python3 ${PYPSQL} --file="${SCRIPTS_DIR}/indexes_functions_triggers.sql" --cat
